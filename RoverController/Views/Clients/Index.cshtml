@model IEnumerable<RoverController.Web.DTOs.ClientDTO>

@using RoverController.Lib
@using RoverController.Web.HtmlHelperExtensions
@using RoverController.Web.Helper

@{
    ViewBag.Title = "Branches";

    var entityName = "Client";
    var entityNameLowercase = entityName.ToLower();
    var deleteApiUrl = Api.Clients.Delete;
}

@section Header {

    @Styles.Render("~/Porto/vendor/css/pnotify")
    @Styles.Render("~/Porto/datatables/css")
}

@section Breadcrumbs {
    <header class="page-header">
        <h2>@ViewBag.Title</h2>

        <div class="right-wrapper text-right">
            <ol class="breadcrumbs">
                <li>
                    <a href="@Url.Action("Index", "Home")">
                        <i class="icons icon-home"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li>
                    <span>
                        <i class="icons icon-badge"></i>
                        <span>@ViewBag.Title</span>
                    </span>
                </li>
            </ol>

            @*<a class="sidebar-right-toggle" data-open="sidebar-right"></a>*@
        </div>
    </header>
}

@section PageButtons {
    <div class="row">
        <div class="col-lg-2 col-md-6 col-sm-12">
            @Html.ActionLink("Add New", "Create", null, new { @class = "btn btn-primary btn-block redirect" })
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-12">
        <section class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table id="clientsTable" class="table table-responsive-lg mb-0 table-striped table-hover clickable">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.City)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Phone)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Email)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Province)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Country)
                                </th>
                                <th>
                                    @Html.DisplayShortNameFor(model => model.ExpiryDate)
                                </th>
                                <th>
                                    @Html.DisplayShortNameFor(model => model.IsDemo)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.UsersCount)
                                </th>
                                @*<th>
                                        Orders
                                    </th>
                                    <th>
                                        Customers
                                    </th>
                                    <th>
                                        Products
                                    </th>*@
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

@Html.Partial("pvActionButton")

@section Scripts{

    @Scripts.Render("~/Porto/vendor/pnotify/js")
    @Html.Partial("pvDatatables")

    <script>
        $(document).ready(function () {

            if('@ViewBag.Saved' == 'True')
            {
                new PNotify({
                    title: 'Success!',
                    text: 'Branch saved.',
                    type: 'success'
                });
            }

            //------------------------------- DataTable -------------------------------//
            var apiUrl = '@Api.Clients.Filter';

            $('#clientsTable').DataTable({

                processing: true,
                serverSide: true,
                searching: true,
                //ordering: true,
                paging: true,
                pageLength: 25,
                rowId: 'id',
                //saveState: true,
                order: [[@((int)RoverController.Lib.ClientColumns.Name), 'asc']],

                ajax: {
                    url: apiUrl,
                    dataSrc: function (data) {
                        //console.log(data);
                        return data.data;
                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                        new PNotify({
                            title: 'Oops!',
                            text: 'Could not load the branches.',
                            type: 'error'
                        });
                    }
                },

                createdRow: function (row, data, index) {
                    var url = '@Url.Action("DetailsModal", new { id = "primaryKey" })';
                    url = url.replace("primaryKey", data.id);
                    $(row).attr('target', url);
                },

                columns: [
                    {
                        data: "id",
                        className: "text-right nowrap actions",
                        orderable: false,
                        render: function (id, type, client) {

                            var actionButton = $('#actionButton').html();
                            actionButton = actionButton.replace(new RegExp("{primaryKey}", "g"), id);
                            actionButton = actionButton.replace(new RegExp(encodeURI("{primaryKey}"), "g"), id);
                            return actionButton;
                        }
                    },
                    { data: "name", name: "Name", autowidth: true },
                    { data: "city", name: "city", autowidth: true },
                    { data: "phone", name: "Phone", autowidth: true },
                    { data: "email", name: "Email", autowidth: true },
                    { data: "province", name: "Province", autowidth: true },
                    { data: "country", name: "Country", autowidth: true },
                    { data: "expiryDateFormatted", name: "Expiration", autowidth: true },
                    //{ data: "isDemo", name: "Demo", autowidth: true },
                    {
                        data: "isDemo",
                        name: "Demo",
                        render: function (data, type, client) {
                            var checkbox = '<div class="checkbox-custom checkbox-default"><input type="checkbox" disabled><label for="checkboxExample1"></label></div>';
                            if (client.isDemo) {
                                checkbox = '<div class="checkbox-custom checkbox-default"><input type="checkbox" disabled checked><label for="checkboxExample1"></label></div>';
                            }

                            return checkbox;
                        }
                    },
                    { data: "usersCount", name: "Users", autowidth: true },
                    //{ data: "workOrdersCount", name: "Delivery Orders", autowidth: true },
                    //{ data: "customersCount", name: "Customers", autowidth: true },
                    //{ data: "productsCount", name: "Products", autowidth: true },
                ],

                language: {
                    emptyTable: "There are no branches at present.",
                    zeroRecords: "No matching branches were found."
                },

            });

            //--------------------------- View Details ---------------------------//
            $('#clientsTable').on('click', 'tbody td', function (e) {

                // if you are just doing some text selection it won't trigger the click on the row
                if (getSelection().toString() != "")
                    e.stopPropagation();

                if (!$(this).hasClass('actions')) {
                    e.stopPropagation();

                    //showLoading();

                    $.magnificPopup.open({
                        type: 'ajax',
                        modal: true,

                        fixedContentPos: false,
                        fixedBgPos: true,

                        overflowY: 'auto',

                        preloader: false,

                        midClick: true,
                        removalDelay: 300,
                        mainClass: 'my-mfp-zoom-in',

                        closeOnContentClick: false,
                        closeOnBgClick: true,
                        items: {
                            src: $(this).parent().attr('target'),
                        },
                        callbacks: {
                            parseAjax: function (response) {
                                //hideLoading();
                            }
                        }
                    });
                    return false;
                }
            });

            //--------------------------- Delete ---------------------------//
            $('#clientsTable').on('click', '.js-delete', function (e) {

                if (!$(this).hasClass('disabled')) {
                    var button = $(this);
                    var id = button.closest('tr').attr('id');
                    var row = button.parents('tr');

                    bootbox.confirm('Are you sure you wish to delete this @entityNameLowercase?', function (result) {
                        if (result) {

                            var url = '@deleteApiUrl';
                            url = url.replace("{id}", id);
                            url = url.replace("{clientId}", @ViewHelper.CurrentClientId);

                            $.ajax({
                                url: url,
                                method: "DELETE",
                                contentType: 'application/json; charset=utf-8',
                            })
                            .done(function () {
                                row.remove();

                                // Show success notification
                                new PNotify({
                                    title: 'Success!',
                                    text: '@entityName deleted.',
                                    type: 'success'
                                });

                            })
                            .fail(function (error) {
                                console.log(error);

                                new PNotify({
                                    title: 'Oops!',
                                    text: 'Could not delete the @entityNameLowercase.',
                                    type: 'error'
                                });
                            })
                            .always(function () {
                            });
                        }
                    });
                }

                return false;
            });

        });
    </script>
}
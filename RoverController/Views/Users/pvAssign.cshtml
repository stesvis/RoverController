@model RoverController.Web.ViewModels.AssignUserViewModel

@{

    var dropdownAttributes = new Dictionary<string, object>(Html.GetUnobtrusiveValidationAttributes(ViewData.TemplateInfo.HtmlFieldPrefix));
    dropdownAttributes.Add("class", "form-control populate placeholder");
    dropdownAttributes.Add("data-plugin-selectTwo", null);

    if (Request.Browser.IsMobileDevice)
    {
        dropdownAttributes.Add("data-plugin-options", "{\"selectOnClose\": false, \"allowClear\": false, \"minimumResultsForSearch\": -1}");
    }
    else
    {
        dropdownAttributes.Add("data-plugin-options", "{\"selectOnClose\": false, \"allowClear\": false}");
    }

    var isListEmpty = (ViewBag.ClientsListItems as List<SelectListItem>).Count == 0;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.UserId)

    <div class="zoom-anim-dialog modal-block modal-block-primary modal-block-sm">
        <section class="card">
            <header class="card-header">
                <h2 class="card-title">Assign User</h2>
            </header>
            <div class="card-body">
                <div class="modal-wrapper">
                    @*<div class="modal-icon">
                            <i class="fa fa-question-circle"></i>
                        </div>*@
                    <div class="modal-text">
                        <div class="form-group mb-3">
                            <div class="row">
                                <div class="col-lg-12 mb-3">
                                    @Html.LabelFor(m => m.ClientId, new { @class = "control-label" })
                                    @if (isListEmpty == false)
                                    {
                                        @Html.DropDownListFor(m => m.ClientId, new SelectList(ViewBag.ClientsListItems, "Value", "Text"), "", dropdownAttributes)
                                    }
                                    else
                                    {
                                        <div class="alert alert-warning">
                                            @*<button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>*@
                                            <strong>Hey!</strong> This user is already assigned to all the vailable branches.
                                        </div>
                                    }
                                    @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger help-block small" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <footer class="card-footer">
                <div class="row">
                    <div class="col-md-12 text-right">
                        <button class="btn btn-default modal-dismiss">Cancel</button>
                        @if (isListEmpty == false)
                        {
                            <button type="submit" class="btn btn-primary modal-confirm">Save</button>
                        }
                    </div>
                </div>
            </footer>
        </section>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
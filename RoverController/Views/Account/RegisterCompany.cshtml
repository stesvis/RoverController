@model RoverController.Web.ViewModels.ClientViewModel

@using RoverController.Lib

@{
    /**/

    Layout = "~/Views/Shared/_LayoutGuest.cshtml";
    ViewBag.Title = "Register Company";
}

<a href="/" class="logo float-left">
    <img src="~/Content/levitica-logo.png" style="width: 150px; margin-top: 20px;" alt="Levitica" />
</a>

<div class="panel card-sign">
    <div class="card-title-sign mt-3 text-right">
        <h2 class="title text-uppercase font-weight-bold m-0"><i class="fas fa-suitcase"></i> Company</h2>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("RegisterCompany", "Account", FormMethod.Post, new { role = "form", novalidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger help-block small" })

            <div class="form-group mb-3">
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger help-block small" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger help-block small" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger help-block small" })
            </div>

            <div class="form-group mb-0">
                <div class="row">
                    <div class="col-lg-6 mb-3">
                        @Html.LabelFor(m => m.Country, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.Country, new SelectList(ViewBag.Countries, "Key", "Value"), "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger help-block small" })
                    </div>
                    <div class="col-lg-6 mb-3">
                        @Html.LabelFor(m => m.Province, new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.Province, new SelectList(ViewBag.Provinces, "Key", "Value"), "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger help-block small" })
                    </div>
                </div>
            </div>

            <div class="form-group mb-0">
                <div class="row">
                    <div class="col-lg-6 mb-3">
                        @Html.LabelFor(m => m.Address1, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Address1, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger help-block small" })
                    </div>
                    <div class="col-lg-6 mb-3">
                        @Html.LabelFor(m => m.Address2, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Address2, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger help-block small" })
                    </div>
                </div>
            </div>

            <div class="form-group mb-0">
                <div class="row">
                    <div class="col-lg-6 mb-3">
                        @Html.LabelFor(m => m.City, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger help-block small" })
                    </div>
                    <div class="col-lg-6 mb-3">
                        @Html.LabelFor(m => m.PostalCode, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger help-block small" })
                    </div>
                </div>
            </div>

            <div class="form-group mb-0">
                <div class="row">
                    <div class="col-lg-6 mb-3">
                        <div class="g-recaptcha" data-sitekey="6LfHBjAUAAAAAHm2bl78ysT_elH1LVhaZ6vfXY7Z"></div>
                        @Html.ValidationMessage("recaptcha", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group mb-0">
                <div class="row">
                    <div class="col-sm-4 text-left">
                        @*<a href="#" onclick="window.history.go(-1); return false;">Go back</a>*@
                        <button type="button" class="btn btn-quaternary btn-block mt-3" onclick="window.history.go(-1); return false;">Go Back</button>
                    </div>
                    <div class="col-sm-4 text-left">
                    </div>
                    <div class="col-sm-4 text-right">
                        <button type="submit" class="btn btn-primary btn-block mt-3">Continue</button>
                    </div>
                </div>
            </div>

            @*<span class="mt-3 mb-3 line-thru text-center text-uppercase">
                    <span>or</span>
                </span>

                <div class="mb-1 text-center">
                    <a class="btn btn-facebook mb-3 ml-1 mr-1" href="#">Connect with <i class="fa fa-facebook"></i></a>
                    <a class="btn btn-twitter mb-3 ml-1 mr-1" href="#">Connect with <i class="fa fa-twitter"></i></a>
                </div>*@

            <p class="text-center">Already have an account? <a href="@Url.Action("Login")">Sign In!</a></p>

        }
    </div>
</div>

@section Scripts {

    <script src='https://www.google.com/recaptcha/api.js'></script>

    <script>

        $(document).ready(function () {

            var countryDropdown = $('#@Html.IdFor(model => model.Country)');
            var regionDropdown = $('#@Html.IdFor(model => model.Province)');

            reloadProvinces(countryDropdown.val());

            countryDropdown.change(function () {

                reloadProvinces($(this).val());

            });

        });

        function reloadProvinces(country) {

            var regionDropdown = $('#@Html.IdFor(model => model.Province)');
            var apiUrl = '';

            if (country == '@Country.Canada') {
                apiUrl = '@Api.Tasks.Provinces';
            }
            else if (country == '@Country.USA') {
                apiUrl = '@Api.Tasks.States';
            }
            else {
                return;
            }

            $.ajax({
                url: apiUrl,
                method: "GET"
            })
            .done(function (data) {
                //console.log(data);
                regionDropdown.empty();

                var option = new Option('', '');
                regionDropdown.append($(option));

                $.each(data, function (key, object) {
                    //console.log(object);
                    var selected = false;
                    @if (Model != null)
                    {
                        <text>
                            if (object.key == '@Model.Province') {
                                selected = true;
                            }
                        </text>
                    }
                    option = new Option(object.value, object.key, '', selected);
                    regionDropdown.append($(option));
                });
            })
            .always(function () {
            })
            .fail(function (error) {

            });

        }
    </script>

}